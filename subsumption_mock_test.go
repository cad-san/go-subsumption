// Automatically generated by MockGen. DO NOT EDIT!
// Source: subsumption.go

package subsumption_test

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of Behavior interface
type MockBehavior struct {
	ctrl     *gomock.Controller
	recorder *_MockBehaviorRecorder
}

// Recorder for MockBehavior (not exported)
type _MockBehaviorRecorder struct {
	mock *MockBehavior
}

func NewMockBehavior(ctrl *gomock.Controller) *MockBehavior {
	mock := &MockBehavior{ctrl: ctrl}
	mock.recorder = &_MockBehaviorRecorder{mock}
	return mock
}

func (_m *MockBehavior) EXPECT() *_MockBehaviorRecorder {
	return _m.recorder
}

func (_m *MockBehavior) Init() {
	_m.ctrl.Call(_m, "Init")
}

func (_mr *_MockBehaviorRecorder) Init() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Init")
}

func (_m *MockBehavior) Sence() (bool, error) {
	ret := _m.ctrl.Call(_m, "Sence")
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockBehaviorRecorder) Sence() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Sence")
}

func (_m *MockBehavior) Perform() (bool, error) {
	ret := _m.ctrl.Call(_m, "Perform")
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockBehaviorRecorder) Perform() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Perform")
}
